<h1>W1</h1>
<p>兩人一組做報告W2~W4完成並交付</p>
<p>用LEO做BLOG</p>
<p>將author修改成自己的名字</p>
<p><img alt="" height="349" src="/images/pelican1.png" width="621"/></p>
<p>傳送位置改成自己的cd2021並新增disqus論壇</p>
<p><img alt="" height="352" src="/images/pelican2.png" width="625"/></p>
<p>blog內容撰寫處</p>
<p><img alt="" height="349" src="/images/pelican3.png" width="620"/></p>
<p></p>
<h1>W2</h1>
<p>將圖檔放置coppeliasim編輯並測試</p>
<p>圖檔初草圖</p>
<p><img alt="" height="338" src="/images/2.png" width="548"/></p>
<p></p>
<p>改造後各別零件<img alt="" height="291" src="/images/未命名.png" width="502"/></p>
<p><img alt="" height="288" src="/images/未命名2.png" width="500"/></p>
<p><img alt="" height="258" src="/images/未命名3.png" width="495"/></p>
<p><img alt="" height="257" src="/images/未命名4.png" width="578"/></p>
<p></p>
<p><img alt="" height="242" src="/images/未命名5.png" width="429"/></p>
<p><img alt="" height="470" src="/images/未命名6.png" width="555"/></p>
<p></p>
<p></p>
<p></p>
<p></p>
<p>圖檔2.0影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/RjVcg4wXsw0" width="560"></iframe></p>
<p></p>
<p></p>
<p></p>
<p>coppeliasim測試圖</p>
<p><img alt="" height="431" src="/images/test1111.png" width="766"/></p>
<p></p>
<p>測試影片</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/RRznqvxBcuU" width="560"></iframe></p>
<h1>W3</h1>
<p>測試1</p>
<p><a href="https://drive.google.com/drive/u/0/folders/1OYVbl3cYj_-fkuaArtclJRiNoodQHk7H">第一次測試coppeliasim</a></p>
<p><a href="https://drive.google.com/drive/u/0/folders/1bNWk8o1UbAUWI554ASf9u7DNvenfFGik">stl檔</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/r3D9ZccdB6M" width="560"></iframe></p>
<p>測試二</p>
<p><a href="https://drive.google.com/drive/u/0/folders/1tQ1fepp6NYhcuLg2EIWkgQzCTdnu9Q3l">coppeliasim第二次測試</a></p>
<p><a href="https://drive.google.com/drive/u/0/folders/1bNWk8o1UbAUWI554ASf9u7DNvenfFGik">第二次測試stl</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/AjqtpE51k1Q" width="560"></iframe></p>
<p>測試三</p>
<p><a href="https://drive.google.com/drive/u/0/folders/17eKw34ROoKfTKXxOr3wvg4RZmva3M1wH">第三次測試coppeliasim</a></p>
<p><a href="https://drive.google.com/drive/u/0/folders/1LEC6oQ8GNH74uakIbjCPXtFzB-8zmvcE">第三次測試stl</a></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/ersMQXUpdS0" width="560"></iframe></p>
<h1>W4</h1>
<p>stage1報告:<a href="https://40823123.github.io/stage1-ag19/reveal/index.html#/">https://40823123.github.io/stage1-ag19/reveal/index.html#/</a> </p>
<h1>W5</h1>
<p>由兩人一組變成四人一組並討論題目</p>
<h2>分組組員</h2>
<p><span>40823116 </span><span>| Repository: <a href="https://github.com/40823116/cd2021">40823116</a><span><span> </span>| Site:<span> </span></span><a href="https://40823116.github.io/cd2021">40823116</a></span></p>
<p><span>40823123 <span>| Repository: <a href="https://github.com/40823123/cd2021">40823123</a><span><span> </span>| Site:<span> </span></span><a href="https://40823123.github.io/cd2021">40823123</a></span></span></p>
<p><span>40823131 </span><span>| </span><span>Repository: </span><a href="https://github.com/40823131/cd2021">40823131</a><span><span> </span>| Site:<span> </span></span><a href="https://40823131.github.io/cd2021">40823131</a></p>
<p><span>40823136 </span><span>| </span><span>Repository: </span><a href="https://github.com/40823136/cd2021">40823136</a><span><span> </span>| Site:<span> </span></span><a href="https://40823136.github.io/cd2021">40823136</a></p>
<h1>W6</h1>
<p>用heroku</p>
<p><a href="https://stage2-ag11.herokuapp.com/content/index.html">https://stage2-ag11.herokuapp.com/content/index.html</a> </p>
<p><span>1.從 <a href="http://a.kmol.info:88/heroku.7z">http://a.kmol.info:88/heroku.7z</a> 下載 Heroku CLI，</span><span>解開壓縮至隨身碟Y槽。</span></p>
<h1>W7</h1>
<h2>小組分工</h2>
<p>40823116:繪製運輸小車<span>、pdf製作</span>。</p>
<p>40823123:coppeliasim模擬、可用資料查找及整合<span>、reveal製作</span>。</p>
<p>40823131:運輸小車程式編寫、修改<span>運輸小車</span>、coppeliasim模擬調整、網頁協同、構思。</p>
<p>40823136:機械手臂程式編寫、<span>coppeliasim模擬調整、可用資料查找及整合、構思</span>。</p>
<h2>運輸小車繪製</h2>
<p>因為此次專案只有小車需繪製，所以仍採用Inventor(2018)進行繪製。</p>
<p>stl檔:<a href="https://drive.google.com/file/d/1HULgTeENzh3tGrNMneSqoOs3D_XNICU-/view?usp=sharing">https://drive.google.com/file/d/1HULgTeENzh3tGrNMneSqoOs3D_XNICU-/view?usp=sharing</a> </p>
<p>ipt檔:<a href="https://drive.google.com/file/d/11L6R_NlkVavxR1QjsBnwVqe7aqBPAduU/view?usp=sharing">https://drive.google.com/file/d/11L6R_NlkVavxR1QjsBnwVqe7aqBPAduU/view?usp=sharing</a> </p>
<h2>倉庫繪製</h2>
<p>將運輸物儲存至此地已達到整體循環</p>
<p>STL:<a href="https://40823123.github.io/stage2-ag11/downloads/%E5%85%AC%E5%BB%9F.STL">倉庫STL檔</a></p>
<p>SOLIDWORKS:<a href="https://drive.google.com/file/d/1BDlUg-Wp6682xEMiiKycW0paN4jO9Fd7/view?usp=sharing">倉庫圖檔</a></p>
<h1>W8</h1>
<h2>程式控制運輸小車</h2>
<p>利用控制各輪軸的速度，以達到控制車體前進後退及轉向。</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/0r_2b2W192o" title="YouTube video player" width="560"></iframe></p>
<h2>程式控制真空機械手臂</h2>
<p>利用CoppeliaSim內建的機械手臂修改裏頭的程式</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/FWBZ8fuP7H0" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h1>W9</h1>
<p>stage2-ag11最終版</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/kSmxRcGlpQo" title="YouTube video player" width="560"></iframe></p>
<p></p>
<h1>W10</h1>
<h2>task1</h2>
<p><img alt="" height="749" src="/images/task1講述喔.png" width="1095"/></p>
<p></p>
<p></p>
<h2>task2</h2>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/cvEFvUINdog" title="YouTube video player" width="560"></iframe></p>
<p></p>
<p></p>
<p><img alt="" height="727" src="/images/task2.png" width="538"/></p>
<p></p>
<p></p>
<p></p>
<h1>W11</h1>
<p>每組抽2人進行課程直播講解</p>
<p><a href="https://youtu.be/LX6kWSorCzU">第十一週直播</a></p>
<p>主題:reveal API 程式說明(半完成)</p>
<p></p>
<p></p>
<p></p>
<h1>W12</h1>
<p><a href="https://youtu.be/J_F9BKspvCE">第十二週直播</a></p>
<p>主題:<span>TASK1程式講解與直播軟體串流設定攝像頭設定疑難排解</span></p>
<h1>W13</h1>
<p>直播小組討論stage3和機械手臂程式</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/a8Uw1WOhCYk" title="YouTube video player" width="560"></iframe></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/Sy2VR3APpv4" title="YouTube video player" width="560"></iframe></p>
<p><img alt="" height="623" src="/images/78.png" width="1187"/></p>
<p>78行要對應我的ip</p>
<p>roboDK裡選工具&gt;選項&gt;其他&gt;點選api服務器ip，將此行ip複製到RDK = Robolink(robodk_path="改成你資料夾內到RoboDK.exe的位址", robodk_ip)，之後按go</p>
<h1>W14</h1>
<p>優化機械手臂程式</p>
<h1>W15</h1>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/IKOGwoJ2HLk" title="YouTube video player" width="560"></iframe></p>
<h2>forward kinematics 正向運動學</h2>
<p></p>
<p>x,y with respect to the world coordinate frame.</p>
<p>x和y為y座標框架</p>
<p>the problem here is that given x and y,we want to determine the joined angles,q1and q2</p>
<p>以x為基準到a1一個角度q1,以a1為基準到a2一個角度q2</p>
<p>The solution that we're going to follow in this particular section is a geometric.</p>
<p>解決部分幾何</p>
<p>一</p>
<p>利用畢氏定理(pythagoras theorem)畢達哥拉斯定理</p>
<p>我們可以知道原點到e點的距離為r</p>
<p></p>
<p>利用餘弦公式(<span>所有邊都標記為A, B, C，角都標記為a, b, c </span>)</p>
<p>A*A=B*B+C*C-2BCcosa</p>
<p>r*r=a1*a1+a2*a2-2a1a2cos(alpha)</p>
<p>經過移項</p>
<p><img alt="" height="244" src="/images/196556967_1133206143826013_7267601307764385006_n.jpg" width="436"/></p>
<p>180-q2=alpha</p>
<p>cosq2=-cos(alpha)</p>
<p>把餘弦公式套用到q2的三角形</p>
<p>我們知道q2所以鄰邊為a2cosq2對邊為a2sinq2</p>
<p>可以用q2角寫出正弦關係</p>
<p>現在把原點連到E點畫出的角度為BETA,邊常用藍色表示</p>
<p>藍色底邊為a1+a2cosq2</p>
<p>回到之前化的紅色三角形我們可以建立出q1和beta的關係</p>
<p>設q1+beta=gamma</p>
<p>總結</p>
<p>我們有q2餘弦方程式和q1方程式</p>
<p>餘弦函數在0對稱</p>
<p>所以我們知道cosq2的值可能為正或負</p>
<p>我們選擇正角才可以寫出這式子</p>
<p>現在我們來用逆向運動學來處理雙連桿機構</p>
<h2> inverse kinematic 逆向運動學</h2>
<p>我們有兩個連接角 q1 和 q2 的表達式，根據末端執行器姿勢 x 和 y 以及一系列常量</p>
<p>你會發現這兩方程式不是獨立的,q1方程式取決於q2的解</p>
<p>在這狀況下,q2為負,<span>我們將在q2反餘弦的解前面加上負號</span></p>
<p><span>我們需求解q1，因此采用這個特定的三角形，之前求解的角度β以及根據y和x定義的角度ɣ</span></p>
<p>q1,beta,gamma和之前求的不同因為涉及到符號變化</p>
<p>然後我們可以替代之前所有等式,以求得此q1方程式</p>
<p>同樣這裡符號發生變化</p>
<p>原本是負號</p>
<p><span>這是雙連桿機構在此逆向運動學的總形式，其中q2為負</span></p>
<p><span>讓我們比較兩個解決方案，q2為正和q2為負的情況</span></p>
<p></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/eIZuz1XCd0w" title="YouTube video player" width="560"></iframe>在這裡，我們有與剛剛看到的相同的兩連桿機器人，但這次我們將使用分析方法來解決它，即我們將更多地依賴代數，特別是線性代數而不是幾何</p>
<p><span>我們有一個表達式 E，它是表示機械手臂最終位置的齊次變換式，我們在上一課中看到了這一點，我們可以將最終位置寫為一系列基本齊次變換式</span></p>
<p><span>Q1 旋轉，A1 沿 X 方向平移，Q2 旋轉，然後 A2 沿 X 方向平移</span></p>
<p><span>如果我將其展開，將所有變換相乘，就會得到此處所示的表達式 E ;它是一個三乘三的齊次變換矩陣，表示機械手臂的最終的位置</span></p>
<p><span>現在對於這個特殊的兩連桿機器人，我們只對它的最終位置感興趣，與它有關的是 X 和 Y 坐標，它們是齊次變換矩陣中的這兩個元素，所以我將把它們複製出來</span></p>
<p><span>所以這裡又是我們對 X 和 Y 的表達式，我們要做的是一個相當常見的技巧，我們要將它平方並將這兩個方程相加，我得到一個看起來像這樣的關係式</span></p>
<p><span>現在我可以根據最終位置X和Y以及機械手臂的常數A1及A2來求出關節角度Q2</span></p>
<p><span>我將展開這些項，Q1 的正弦加 Q2 或 Q1 的餘弦加 Q2，為了讓生活更輕鬆一點，我將建立一些分部，所以只要有 cos Q2，我會將其取代為C2並且在有正弦Q2的地方，我會將其取代為S2</span></p>
<p><span>看看這兩個方程式，我可以看到它們屬於一個眾所周知的形式，對於這種形式，有一個淺顯易見的解決方案</span></p>
<p><span>所以我將只考慮其中一個方程，Y 的方程，並使用我們眾所周知的恆等式和它的解，我可以確定變量小 a、小 b 和小 c 的值，一旦我確定了這些，然後我可以寫下 Q1 的解決方程，在這種特殊情況下，x 相當於 theta</span></p>
<p><span>這裡再次是我們對 Q1 的表達，從上一張幻燈片複製過來，我們可能還記得在我們早期的說明中，確定了這種特殊關係； X 平方加 Y 平方等於這個特定的複雜表達式</span></p>
<p><span>因此，我可以將其替換並進行一些簡化，最終得到 Q1 的這個稍微不那麼複雜的表達式</span></p>
<p><span>與上一節中遵循幾何方法求出的表達式一模一樣</span></p>
<h1>W16</h1>
<p>一.onshape零組件繪製</p>
<p><a href="https://drive.google.com/file/d/1hit5mzsEXGM6s_wM8FR-u8kXt5bdKXcV/view?usp=sharing">圖檔與stl</a></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/t7143dEU-jw" title="YouTube video player" width="560"></iframe></p>
<p>二.</p>
<p class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">建立 CoppeliaSim 4.1.0 MTB robot 場景</yt-formatted-string></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/qHsOy9Avq08" title="YouTube video player" width="560"></iframe>剛開始的圖檔只是空殼,需要再添增內部形狀編輯程式(toggle shape)編輯完接下來不管任何皮都可以套用</p>
<p>lua執行</p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/AyVKcsbyzIg" title="YouTube video player" width="560"></iframe></p>
<p>軸如果有跑出驚嘆號可以先把軸改成被動模式,因為我的圖只有3個軸(沒有吸盤的旋轉軸),有那個也沒用所以沒有新增,但是lua程式要做修改</p>
<p><img alt="" height="681" src="/images/耶嘿.png" width="553"/></p>
<p>三.加入components-gripper-suction pad 吸盤 場景檔&amp;程式檔</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init() 
    axis1=sim.getObjectHandle('MTB_axis1')
    axis2=sim.getObjectHandle('MTB_axis2')
    axis3=sim.getObjectHandle('MTB_axis3')
    mtb3=sim.getObjectHandle('MTB_3')
    suctionPad=sim.getObjectHandle('suctionPad')
    BaseFrame=sim.getObjectHandle("BaseFrame")
    block =sim.getObjectHandle("Cuboid")
    rotation1 = 0
    distance3 = 0
    deg = math.pi/180
end
function sysCall_actuation() 
    -- 吸盤往下降時, 直接貼在方塊頂部的校正值, 單位 m
    -- 向下較正值為 4.2 mm
    calibration = 0.0042
    message, auxiliaryData=sim.getSimulatorMessage()
        while message ~= -1 do
            key=auxiliaryData[1]
            sim.addStatusbarMessage('使用者按下 key:'..key)
            if (message==sim.message_keypress) then
                if (auxiliaryData[1]==112) then --p activate the suction pad
                    -- if key p pressed activate the suction mode
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
                end -- if p
                if (auxiliaryData[1]==113) then --q deactivate the suction pad
                    -- if key q pressed deactivate the suction mode
sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
                end -- if q
                if (auxiliaryData[1]==114) then --r right turn in degree
                    -- if key r pressed axis1 angle adds 5 degrees
                     rotation1 = rotation1 + 5*deg
                     sim.setJointPosition(axis1, rotation1)
                end -- if r
                if (auxiliaryData[1]==108) then --l left turn in degree
                    -- if key l pressed axis1 angle substract 5 degrees
                     rotation1 = rotation1 - 5*deg
                     sim.setJointPosition(axis1, rotation1)
                end -- if l
                if (auxiliaryData[1]==117) then --d suction pad down
                    -- if key d pressed axis3 will down 0.01 m plus calibration
                     distance3 = distance3 + 0.01 + calibration
                     sim.setJointPosition(axis3, distance3)
                end -- if d
                if (auxiliaryData[1]==100) then --u suction pad up
                    -- if key u pressed axis3 will up 0.01 m minus calibration
                    -- 吸盤往下升 1 公分加上校正值
                     distance3 = distance3 - 0.01 - calibration
                     sim.setJointPosition(axis3, distance3)
                end -- if u
                if (auxiliaryData[1]==99) then --c coordinate of block
                    blockPosition = sim.getObjectPosition(block, BaseFrame)
                    sim.addStatusbarMessage("方塊目前座標為:"..table_to_string(blockPosition))
                end --if c
           end  -- if
    message, auxiliaryData=sim.getSimulatorMessage()
        end -- while
end -- function
function sysCall_sensing() 
--[[
    -- Read Proximity sensor (0= nothing detected, 1 = object detected)
    local res = sim.readProximitySensor(proximity)
    -- Check if possible to insert an new box
    if (sim.getSimulationTime()-T_last_inserted &gt; T_insert) and not hasStopped then
        insertBox()
    end
    -- If proximity sensor detects an object, stop the belt, stop inserting objects
    if res == 1 and not hasStopped then
        if boolList[1] then
            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)
            deltaTime = sim.getSimulationTime()-T_last_inserted
            hasStopped = true
        else
            local box = table.remove(boxList,1)
            local boxDummy = table.remove(boxDummyList,1)
            table.remove(boolList,1)
            sim.removeObject(box)
            sim.removeObject(boxDummy)
        end
    end
    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting
    if res == 0 and hasStopped then
        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)
        hasStopped = false
        T_last_inserted = sim.getSimulationTime()-deltaTime
    end
    
]]--
end
function sysCall_cleanup() 
end 
-- Convert a lua table into a lua syntactically correct string
function table_to_string(tbl)
    local result = "{"
    for k, v in pairs(tbl) do
        -- Check the key type (ignore any numerical keys - assume its an array)
        if type(k) == "string" then
            result = result.."[\""..k.."\"]".."="
        end

        -- Check the value type
        if type(v) == "table" then
            result = result..table_to_string(v)
        elseif type(v) == "boolean" then
            result = result..tostring(v)
        else
            v = round(v, 4)
            result = result.."\""..v.."\""
        end
        result = result..","
    end
    -- Remove leading commas from the result
    if result ~= "" then
        result = result:sub(1, result:len()-1)
    end
    return result.."}"
end
function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
end


function insertBox()
    -- Generate random numbers
    local rand1 = math.random()
    local rand2 = math.random()
    local rand3 = math.random()
    -- Generate random disturbances on position and orientation
    local dx = (2*rand1-1)*0.1
    local dy = (2*rand2-1)*0.1
    local dphi = (2*rand3-1)*0.5
    local disturbedCoordinates = {0,0,0}
    disturbedCoordinates[1] = insertCoordinate[1]+dx
    disturbedCoordinates[2] = insertCoordinate[2]+dy
    disturbedCoordinates[3] = insertCoordinate[3]
    -- Copy and paste box and boxDummy
    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)
    -- Update last inserted box time
    T_last_inserted = sim.getSimulationTime()
    -- Move and rotate
    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)
    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})
    -- Store handles to boxes and dummies
    table.insert(boxList,insertedObjects[1])
    table.insert(boxDummyList,insertedObjects[2]) 
    -- Decide if object is good or bad
    local decision = math.random() 
    if decision &lt;= goodPercentage then
    -- Object is good, assign goodColor
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)
        table.insert(boolList,true)
    else
    -- Object is bad, assign random color
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})
        table.insert(boolList,false)
    end
end
</pre>
<p></p>
<p></p>
<p></p>
<p>四.逆向運動學函式</p>
<p><a href="https://drive.google.com/drive/folders/1bLnuDnym6sFohvNSjX-7gGH-V6I1P3OV?usp=sharing">skr.lua</a>  <a href="https://drive.google.com/file/d/15Hdl4zBSo5jb7JNdg3SR5xLv8fTKBU44/view?usp=sharing">coppeliasim</a></p>
<p></p>
<p><iframe allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen="allowfullscreen" frameborder="0" height="315" src="https://www.youtube.com/embed/lbUuDsWz7sI" title="YouTube video player" width="560"></iframe></p>
<p>(0.2, 0.7, 0.05)</p>
<p><img alt="" height="635" src="/images/第一座標.jpg" width="286"/></p>
<p><span>(-0.3, -0.55, 0.05)</span></p>
<p><img alt="" height="627" src="/images/第二座標.jpg" width="282"/></p>
<p>五.</p>
<p></p>
<p></p>
<p></p>